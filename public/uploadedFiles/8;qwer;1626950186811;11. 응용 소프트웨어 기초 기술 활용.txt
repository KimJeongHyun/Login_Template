11. 응용 SW 기초 기술 활용

운영체제
 : 사용자가 하드웨어를 쉽게 관리하고 사용할 수 있도록 지원하는 프로그램

커널
 : 하드웨어와 관련된 내부적인 역할을 담당함

쉘
 : 사용자 명령을 처리하는 역할

윈도우즈의 특징
 1. GUI
 2. 선점형 멀티태스킹
 3. 자동 감지
 4. OLE 기능 : 현재 작성 중인 문서에 개체가 자유롭게 연결하거나 편집 가능함.

유닉스 계열 특징
 1. 대화형 운영체제
 2. 다중 작업 기능
 3. 다중 사용자 기능
 4. 이식성 제공
 5. 계층적 트리 구조

CLI
 : 사용자가 직접 커맨드를 입력하는 인터페이스

GUI
 : 그래픽 기반 화면을 터치하거나 선택하는 것을 통해 명령하는 인터페이스

윈도우 / 리눅스*유닉스 명령어들 교재 참고하기..

리눅스*유닉스 접근제어 메커니즘
 1. chmod 777 filename
 2. chmod rwxrwxrwx filename
 3. chmod go-w filename
 4. chmod a-x filename
 5. chmod g+w,o-x filename
 6. chmod go=rx filename

메모리 관리 기법
 1. 반입 기법 : 언제 반입할 것인가?   >> 요구 반입 기법, 예상 반입 기법
 2. 배치 기법 : 어디에 배치할 것인가?>> 최초 적합, 최적 적합, 최악 적합
 3. 할당 기법 : 어떻게 할당할 것인가?>> 연속 할당 기법, 분산 할당 기법
 4. 교체 기법 : 무슨 프로세스를 교체할 것인가? >> 선점/비선점 교체 알고리즘들

프로세스 상태 전이
 1. 생성
 2. 준비 >> 준비 -> 실행 : 디스패치 : 프로세스를 CPU에 할당
 3. 실행 >> 실행 -> 준비 : 타이머 런 아웃 : 할당된 시간이 종료됨 / 실행 -> 대기 : 입출력 발생 : 사용자에 의한 입출력 발생시 진행 중인 프로세스가 대기상태로 전환됨
 4. 대기 >> 대기 -> 준비 : 웨이크 업 : 입출력이 종료되면 프로세스에게 해당 사실을 알림.
 5. 완료

프로세스 스케줄링
 1. 서비스 시간 : 각 프로세스가 작업되어야할 총 시간
 2. 응답시간 : 대기시간 + 서비스시간
 3. 평균 응답시간
 4. 대기시간 : 종료시간 - 서비스시간
 5. 평균 대기시간
 6. 종료시간
 7. 시간 할당량
 8. 응답률 : (대기시간+서비스시간)/서비스시간

선점형 프로세스 스케줄링
 1. 라운드 로빈 : 정해진 할당시간이 지나면 기존 프로세스는 큐의 마지막으로 들어가며 큐에 들어와있었던 프로세스가 해당 할당 시간 동안 진행되는 구조
 2. MLQ : 작업을 여러 종류의 그룹으로 분할하여 여러 큐가 생성되고, 상위 단계 작업을 통해 하위 단계 작업이 선점됨. 각 작업이 독립적인 스케줄링을 가짐.
 3. MLFQ : 큐마다 서로 다른 CPU 할당 시간을 부여함
 4. SRT : 가장 낮은 서비스 시간을 가진 프로세스가 선점됨

비선점형 프로세스 스케줄링
 1. 우선순위 : 매겨진 우선순위에 따라 진행됨
 2. 기한부 : 명시된 시간 안에 프로세스가 진행됨
 3. FCFS : 들어온 순서대로 진행됨
 4. SJF : 할당된 프로세스는 끝까지 진행되며, 짧은 서비스 시간을 가진 프로세스가 우위 임
 5. HRN : 응답률이 높은 프로세스가 먼저 할당됨. 기아 현상을 해결하는 방법. SJF의 보완.

가상화
 : 물리적인 리소스들을 하나로 보이게 하거나, 하나의 리소스를 여러개로 보이게끔 하는 방법.

가상화의 종류
 1. 플랫폼 가상화 : 호스트 프로그램이 게스트 프로그램을 만들어 사용자로 하여금 독립된 환경에 있는 것처럼 보이게하는 가상화 방법
 2. 리소스 가상화 : 게스트 프로그램 속, 독립된 하드웨어 환경 위에서 소프트웨어가 실행되는 것처럼 보이게하는 가상화 방법

가상화 기술요소 분류
 1. 컴퓨팅 가상화 : 컴퓨터 리소스 자원을 가상화하여 논리적 단위로 나눔. 하이퍼바이저
 2. 스토리지 가상화 : 스토리지 및 서버 사이에 SW/HW 계층을 두어 스토리지를 논리적으로 제어할 수 있는 기술. 분산 파일 시스템
 3. I/O 가상화 : 입출력 장치와 서버 사이에 미들웨어 계층을 두어 I/O 장치를 물리적으로 분리하여 케이블, 스위치 등의 구성을 유연하게 만듦.
 4. 컨테이너 : 컨테이너화된 어플리케이션은 단일 운영체제에서만 실행되도록 하는 기술. 도커
 5. 분산처리 기술 : 여러대의 컴퓨터 계산 및 저장 능력을 이용해 문제를 해결할 수 있는 기술
 6. 네트워크 가상화 기술 : 물리적으로 떨어진 네트워크 장비를 연결하는 수단으로, 주로 라우터와 스위치 등의 기기를 가상화하여 가상 네트워크를 지원함

클라우드 컴퓨팅
 : 인터넷을 통해 가상화된 컴퓨팅 리소스들을 사용자에게 제공하는 방법.

클라우드 컴퓨팅 종류
 1. 사설 클라우드 : 기업 또는 조직 내부에서 자체 전산 시스템을 활용해 구축하는 클라우드 시스템
 2. 공용 클라우드 : 클라우드 제공 업체에서 서비스를 제공하는 것.
 3. 하이브리드 클라우드 : 어떤 부분은 사설로, 어떤 부분은 공용 클라우드로 시스템을 구축하는 것.

클라우드 컴퓨팅 유형
 1. IaaS : 서버/스토리지 등의 하드웨어 자원을 클라우드로 지원함
 2. PaaS : 인프라 자원의 생성 및 관리를 신경쓰지 않고 어플리케이션을 개발할 수 있는 환경을 지원함
 3. SaaS : 주문형 소프트웨어. 사용자는 웹을 통해 접속하여 소프트웨어 서비스를 이용할 수 있음.

네트워크
 : 원하는 정보를 송수신자 또는 기기 간 정확하게 전달할 수 있도록 하는 기반 인프라.

OSI  7계층
 1. 물리 계층 : 허브, 리피터
 2. 데이터 링크 계층 : 브리지, L2 스위치
 3. 네트워크 계층 : 라우터. L3 스위치, 게이트웨이, 백본 스위칭 허브
 4. 전송 계층 : L4 스위치
 5. 세션 계층
 6. 표현 계층
 7. 응용 계층

프로토콜
 : 송수신자, 또는 기기간 데이터 통신을 원활하게 하기 위한 표준 통신 규약. 기술적 은어

프로토콜의 3요소
 : 구문, 의미, 타이밍

데이터링크 계층의 프로토콜
 1. HDLC : 동기식 비트 중심의 데이터 통신 프로토콜
 2. PPP :  노드 간의 직접적인 연결을 지원한다.
 3. 프레임 릴레이 : 프레임의 다중 지연 및 다중화 기능만 지원하는 고속 데이터 통신 기술
 4. ATM : 시분할 다중화 방식의 패킷형 전송 기술

네트워크 계층의 프로토콜
 1. IP : 인터넷에서 데이터를 주고받을 떄의 표준 통신 규약
 2. ARP : 자체 고유 주소인 MAC 주소를 IP주소로 변경할 때의 프로토콜
 3. RARP : IP주소를 MAC주소로 변경할 때의 프로토콜
 4. ICMP : 데이터 통신시 함께 전송되는 메세지 형식에 관한 프로토콜
 5. IGMP : 호스트 컴퓨터와 인접한 라우터가 그룹 멤버쉽을 구성할 때 사용되는 프로토콜
 6. 라우팅 프로토콜 : 목적지까지의 최적 경로를 설정해주기 위한 프로토콜

IPv4
 : 네트워크에서 데이터를 교환하기위해 사용되는 32bit 체계의 네트워크 프로토콜

A 클래스 : 0~127
B 클래스 : 128~191
C 클래스 : 192~223
D 클래스 : 224~239 -> 멀티캐스트 용도 
E 클래스 : 240~255 -> 연구 용도

IPv6
 : IPv4의 복잡한 헤더를 개선하고, 확장성을 가미한 128bit 주소체계의 네트워크 프로토콜.

Ad-hoc 
 : 무선통신 및 네트워킹 능력을 가진 두 개 이상의 기기로 구성된 네트워크

IPv4 주소방식
 : 유니캐스트, 멀티캐스트, 브로드캐스트

IPv6 주소방식
 : 유니캐스트, 멀티캐스트, 애니캐스트

IPv4 -> IPv6 전환 기술
 1. 듀얼스택 -> IPv4, IPv6 프로토콜을 모두 매핑해두고 적법한 주소를 고르는 기술
 2. 터널링 -> IPv6 주소를 IPv4 터널로 캡슐화하는 방법
 3. 주소변환 -> 기기 사이 주소변환 게이트웨이를 두는 방법

멀티캐스트
 : 같은 내용의 데이터를 여러 특정한 사용자에게 전송

유니캐스트
 : 1:1로 데이터를 전송

브로드캐스트
 : 서브 네트워크 상의 모든 사용자에게 데이터를 전송

애니캐스트
 : 잠재적인 수신자 그룹 중 가장 가까운 노드로 전송

RIP
 : 벨만 포드 알고리즘. 15홉제한, UDP.
 : 30초마다 전체 라우팅 정보를 브로드캐스팅함

OSPF
 : 다익스트라 알고리즘. 홉 무제한.

벨만 포드 알고리즘
 : 거리벡터 기반 알고리즘. 라우팅 정보를 인접 라우터와 주기적으로 교환함.

다익스트라 알고리즘
 : 링크상태 알고리즘. 라우팅 정보를 모든 라우터에 공유하며, 변경이 발생했을 때만 전송함.

BGP 
 : AS 상호간의 경로 정보를 교환하는 라우팅 프로토콜. 보통 ISP 사업자들 사이에 이뤄지는 프로토콜임.

TCP
 1. 신뢰성
 2. 연결 지향적 특징
 3. 흐름제어
 4. 혼잡제어

UDP
 1. 비신뢰성
 2. 순서화되지 않은 데이터그램 제공
 3. 실시간 응용 및 멀티태스킹 제공
 4. 단순 헤더

세션 프로토콜
 : 응용프로그램 사이의 대화를 유지할 수 있도록 프로세스간의 논리적인 연결을 지원하는 프로토콜

RPC
 : 별도의 원격제어나 코딩없이 다른 주소공간에서 함수나 프로시저를 실행할 수 있도록 지원하는 프로토콜

NetBIOS
 : 응용계층에게 API를 제공하여 상호통신할 수 있도록 해주는 프로토콜

표현계층
 : 사용자가 이해할 수 있도록 지원하는 계층. JPEG, MPEG

응용계층의 프로토콜
 1. HTTP : 인터넷에서 데이터를 주고받는 프로토콜
 2. FTP : TCP/IP 기반의 파일 통신 프로토콜
 3. SMTP : 메일을 주고받기 위한 프로토콜. 포트 25번
 4. POP3 : 원격서버로부터 메일을 가져오는 프로토콜. 로컬에 다운로드함
 5. IMAP : 원격서버로부터 메일을 가져오는 프로토콜. 서버에만 저장됨
 6. TELNET : 인터넷이나 로컬 환경에서 네트워크와 연결하는 프로토콜

패킷 스위칭
 : 작은 단위의 패킷으로 데이터를 전송하며, 데이터를 전송하는 동안만 네트워크를 사용하는 기술

X.25
 : 통신을 원하는 기기 간 패킷 교환망을 통해 패킷을 원활히 전달할 수 있게끔 하는 프로토콜

프레임 릴레이
 : 프레임의 다중 지연 및 다중화 기능만을 사용하는 고속 데이터 전송 기술

ATM
 : 시분할 다중화 방식의 패킷형 교환 기술

서킷 스위칭
 : 네트워크를 특정 사용층이 독점하도록 하는 기술